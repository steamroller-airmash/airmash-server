version: 2
jobs:
  fetch:
    working_directory: ~/build
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - restore_cache:
          key: fetch-cache-{{ checksum "Cargo.lock" }}
      - run:
          name: Fetch Dependencies
          command: cargo +nightly fetch
      - save_cache:
          key: fetch-cache-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo
  build:
    working_directory: ~/build
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - run:
          name: Save rustc version
          command: rustc -V > ~/rustc.version
      - run: 
          name: Setup Environment Variables
          command: |
            echo 'export CARGO_HOME="/root/.cargo"' >> $BASH_ENV
      - restore_cache:
          key: fetch-cache-{{ checksum "Cargo.lock" }}
      - restore_cache:
          key: build-cache-{{ checksum "Cargo.lock" }}-{{ checksum "~/rustc.version" }}-{{ arch }}
      - run:
          name: Build Package
          command: cargo +nightly build
      - save_cache:
          key: build-cache-{{ checksum "Cargo.lock" }}-{{ checksum "~/rustc.version" }}-{{ arch }}
          paths:
            - target
  test:
    working_directory: ~/build
    docker:
      - image: rustlang/rust:nightly
    environment:
      CARGO_HOME: /root/.cargo
    steps:
      - checkout
      - run:
          name: Save rustc version
          command: rustc -V > ~/rustc.version
      - restore_cache:
          key: fetch-cache-{{ checksum "Cargo.lock" }}
      - restore_cache:
          key: test-cache-{{ checksum "Cargo.lock" }}-{{ checksum "~/rustc.version" }}-{{ arch }}
      - run:
          name: Test Package
          command: cargo +nightly test
      - save_cache:
          key: build-cache-{{ checksum "Cargo.lock" }}-{{ checksum "~/rustc.version" }}-{{ arch }}
          paths:
            - target

workflows:
  version: 2
  build_and_test:
    jobs:
      - fetch
      - build:
          requires:
            - fetch
      - test:
          requires:
            - fetch