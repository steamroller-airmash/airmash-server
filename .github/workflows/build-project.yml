on: 
  pull_request:
  push:
    branches-ignore:
      - 'dependabot/**'

name: ci-linux

jobs:
  test:
    name: airmash
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta]
        config: [debug, release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: build-cache-${{ matrix.config }}
      - name: Setup cargo flags
        if: matrix.config == 'release'
        run: |
          echo CARGO_FLAGS=--release >> "$GITHUB_ENV"
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --color always ${{ env.CARGO_FLAGS }}
  
  format:
    name: check-fmt
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
            command: fmt
            args: --all -- --check --config unstable_features=true

  verify-default-config:
    name: verify-default-config
    runs-on: ubuntu-latest

    needs:
      - test

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: build-cache-release
      - name: Build and run
        run: |
          cargo run --release --example export-config --color always > new-default.json
      - name: Diff configs
        run: |
          cp configs/default.json old-default.json
          diff -u new-default.json old-default.json


  validate-configs:
    name: validate-configs
    runs-on: ubuntu-latest
    continue-on-error: true

    needs:
      - test

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: build-cache-release
      - name: Build and run
        run: |
          cargo run --release --color always --example validate-config -- configs/*.json

  verify-pass:
    if: github.event_name == 'pull_request'
    name: verify-tests-pass
    needs: 
      - test
      - format
      - verify-default-config
      - validate-configs
    runs-on: ubuntu-latest

    steps:
      - name: no-op
        run: |
          echo "All checks passed!"
